#!/usr/bin/env ruby

# WARNING:  this file is auto-generated.  changes will be discarded on
# next chef-client run.

require "/root/lib/banana"
require "/root/etc/banana_config"

def usage_exit(stream, code)
  stream.puts "usage: $0 [--all|--group name]... [-j|--concurrent] command [args...]"
  exit(code)
end

def ssh(host, *args)
  ssh_options = ["-o", "StrictHostKeyChecking no"]
  system("ssh", *ssh_options, host.ip_address, *args)
end

begin
  usage_exit($stdout, 0) if ARGV.empty?

  targets = []
  options = { :concurrent => false }

  while !ARGV.empty?
    case ARGV.first
    when "--all"
      ARGV.shift
      targets += ::Banana.config.host_groups.map { |g| g.hosts }.flatten
    when "--group"
      ARGV.shift
      name = ARGV.shift
      g = ::Banana.config.find_host_group_by_name(name)
      raise "#{name}:  group unknown" unless g
      targets += g.hosts
    when "-j", "--concurrent"
      ARGV.shift
      options[:concurrent] = true
    else
      break
    end
  end

  raise "command is not specified" if ARGV.empty?

  num_calls = 0
  threads = []
  targets.each do |host|
    threads << Thread.new do
      ssh(host, *ARGV)
    end
    num_calls += 1
    threads.last.join unless options[:concurrent]
  end

  threads.each { |th| th.join }

  $stderr.puts "#{num_calls} calls isseued"
end
